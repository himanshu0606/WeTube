import pymysql
import pymysql.cursors
from random import randint
from datetime import date
from datetime import datetime

"""
    # updates
    print("1.  Upload a video")  # insert
    print("2.  Change the title of a video")  # update
    print("3.  Delete a comment\n")  # delete

    # queries
    print("4.  List all videos uploaded by an account")
    print("5.  Find all accounts that have more than N subscribers")
    print("6.  Average advertisement revenue generated by an account per video")
    
    print("7.  Search for an account")
    print("8.  Get like-dislike ratio of a certain account's videos")

    print("9.  Get all videos with more than a million views")
    print("10. Total watchtime of an account")
    print("11. Video with the most and least views on an account")

    print("12. Search for a video")
"""


def db_execute(query):
    connnection = pymysql.connect(host='localhost',
                                  user="root",
                                  password="<password>",
                                  db="daproj",
                                  cursorclass=pymysql.cursors.DictCursor)

    with connnection.cursor() as cur:
        cur.execute(query)
        data = cur.fetchall()
        connnection.commit()

    return data


def pprint(dict):

    num_cols = len(dict[0])

    for k in dict[0]:
        print(k, end='\t')
    print()
    for tuple in dict:
        for k in tuple:
            print(tuple[k], end='\t\t')
        print()

    return


def fn1():

    Q = """SELECT VideoID as v from video"""
    res = db_execute(Q)
    res = [i['v'] for i in res]

    vidID = max(res) + 1

    accID = input("Your accountID: ")
    inp = {}

    inp['title'] = input("Enter the title of the video: ")

    while True:
        try:
            inp['duration'] = int(input("Enter the duration of the video: "))
            break
        except:
            print("Please enter a valid duration")
            continue

    inp['upload_time'] = date.today().strftime("%Y-%m-%d") + " " + datetime.now().strftime("%H:%M:%S")

    # print(inp)

    Q1 = f"""INSERT INTO video (title, duration, upload_time, videoId) 
            VALUES( '{inp['title']}', {inp['duration']}, '{inp['upload_time']}', {vidID} )"""

    Q2 = f"INSERT INTO upload VALUES ({accID}, {vidID})"

    try:
        res = db_execute(Q1)
        res = db_execute(Q2)
        print(f"\n\nVideo Uploaded at {inp['upload_time']} with videoID = {vidID}")
    except:
        print("Upload failed :/")

    return


def fn2():
    res = []

    Q = "SELECT videoID v_ID FROM video"

    allvids = db_execute(Q)
    allvids = [i['v_ID'] for i in allvids]

    while True:
        vidID = input("Enter video ID: ")

        try: 
            vidID = int(vidID)
            if (vidID not in allvids): 
                print("This video ID does not exist\n")
                continue
        except:
            print('Please enter a valid videoID\n')
            continue

        Q = f"""SELECT v.title as title
                FROM video v 
                WHERE v.videoID = {vidID}"""
        res = db_execute(Q)
        break

    print(f"\nCurrent title: {res[0]['title']}")
    new_title = input("Enter new title: ")

    while new_title == res[0]['title']:
        print("New title cannot be the same as the old title\n")
        new_title = input("Enter new title: ")

    Q = f"""UPDATE video v
        SET v.title = "{new_title}"
        WHERE v.videoID = {vidID}"""

    try:
        res = db_execute(Q)
        print(f"\n\nUpdated table title to {new_title}")
    except: 
        print("Update failed :/")

    return


def fn3():
    while True:
        try:
            accountID = int(input("Enter your Account ID: "))
            break
        except:
            print("Please enter a valid account ID")
            continue

    keyword = input("Enter keyword for search: ")

    Q = f"""SELECT comment.commentID as cID, comment.content as c
        FROM comment, comments_on co
        WHERE comment.commentID = co.commentID
        AND comment.content LIKE '%{keyword}%'
        AND co.accountID = {accountID}"""

    res = db_execute(Q)
    z = list(zip([i for i in range(1, len(res)+1)], [i for i in res]))
    # print([i[1]['c'] for i in z])

    print()
    for i, j in z:
        print(f"{i}.\t{j['c']}")

    if (len(res) != 0):    

        while True:
            try:
                d = int(input("\n\nWhich comment would you like to delete? "))
                if d not in range(1, len(res)+1):
                    raise ValueError
                break
            except:
                print("Please enter a valid index")
                continue

        del_cID = None
        for i, j in z:
            # print(i, j)
            if i == d:
                del_cID = j['cID']

        Q = f"""DELETE
            FROM comment
            WHERE commentID = {del_cID}"""

        res = db_execute(Q)

        print("\n\nComment deleted")

    else:
        print("No matching comments found")

    return


def fn4():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_id = int(input("Enter your Account ID: "))
            if (acc_id in allaccs): break
            else:
                print("This account ID does not exist\n")
        except:
            print("Please enter a valid account ID\n")
            continue

    Q = f"""SELECT v.title as Video_title, v.duration as Video_duration, v.upload_time as Upload_time
            FROM video v, account a, upload u
            WHERE v.videoid = u.videoid AND a.accountid = u.accountid
            AND a.accountid = {acc_id}"""

    res = db_execute(Q)
    if (len(res) != 0): 
        print(f"\n{'Title:':<50} {'Duration:':<20} {'Upload Time:':<50}")
        for i in res:
            print(f"{i['Video_title']:<50} {i['Video_duration']:<20} {i['Upload_time']}")

    else:
        print("This account has uploaded no videos")
    return


def fn5():
    while True:
        try:
            sub_count = int(input("Enter the subscriber count required:"))
            break
        except:
            print("Please enter a valid subscriber count")
            continue

    Q = f"""SELECT a.username Username, a.subscriber_count as sub_count
            FROM account a
            WHERE a.subscriber_count >= {sub_count}"""

    res = db_execute(Q)
    if len(res) != 0:
        print(f"\n{'Username:':<30} {'Subscriber count:'}")
        for i in res:
            print(f"{i['Username']:<30} {i['sub_count']}")
    else:
        print("No account has that many subscribers")
    return


def fn6():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_ID = int(input("Enter your Account ID: "))
            if (acc_ID in allaccs): break
            else:
                print("This account ID does not exist")
        except:
            print("Please enter a valid account ID")
            continue

    Q = f"""SELECT a.username us, v.revenue ar, v.title t
           FROM video v, upload u, account a
           WHERE u.videoID = v.videoID  AND a.accountID = u.accountID
           AND u.accountID = {acc_ID}"""

    res = db_execute(Q)
    if len(res):
        print(f"\n{res[0]['us']}'s average advertisement revenue\n")

        print(f"{'Title:':<40} {'Revenue:'}")
        for i in res:
            print(f"{i['t']:<40} {i['ar']}")

    else:
        print('This account hasn\'t uploaded any videos')
    return


def fn7():
    keyword = input("Enter keyword for search: ")

    Q = f"""SELECT a.username as Username
            FROM account a 
            WHERE a.username LIKE '%{keyword}%'"""

    res = db_execute(Q)

    if len(res):
        print("\nUsername(s):\n")
        for i in res:
            print(i['Username'])
    else:
        print('No matching accounts found')
    return


def fn8():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_ID = int(input("Enter your Account ID: "))
            if (acc_ID in allaccs): break
            else:
                print("This account ID does not exist")
        except:
            print("Please enter a valid account ID")
            continue

    Q = f"""SELECT SUM(video.likes) as likes, SUM(video.dislikes) as dislikes, account.username as us
            FROM video, upload, account
            WHERE video.videoID = upload.videoID AND account.accountID = upload.accountID
            GROUP BY upload.accountID
            HAVING upload.accountID = {acc_ID}"""

    res = db_execute(Q)
    if len(res):
        print(
            f"\n{res[0]['us']}'s likes-dislike ratio = {int(int(res[0]['likes']) / int(res[0]['dislikes']) * 1000) / 1000}\n")
    else:
        print('This account hasn\'t uploaded any videos')
    return

def fn9():
    Q = f"""SELECT title, view_count, RANK() OVER (ORDER BY view_count DESC) as ord
            FROM video
            WHERE view_count > 1000000
            ORDER BY view_count DESC"""

    res = db_execute(Q)
    for i in res:
        print(f"{str(i['ord']) + '.':<5} {i['title']:<50} {i['view_count']:<30}")


def fn10():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_ID = int(input("Enter your Account ID: "))
            if (acc_ID in allaccs): break
            else:
                print("This account ID does not exist")
        except:
            print("Please enter a valid account ID")
            continue

    Q = f"""SELECT SUM(watch_time) as wt, username
            FROM account
            WHERE accountID = {acc_ID}"""

    res = db_execute(Q)
    if len(res):
        print(f"{res[0]['username']}'s total watch time is {res[0]['wt']} minutes.")
    else: # wtf?
        print('Account not valid')


def fn11():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_ID = int(input("Enter your Account ID: "))
            if (acc_ID in allaccs): break
            else:
                print("This account ID does not exist")
        except:
            print("Please enter a valid account ID")
            continue

    Q = f"""SELECT videoID
            FROM upload
            WHERE accountID = {acc_ID}"""

    res = db_execute(Q)

    if (len(res) > 1):

        Q1 = f"""SELECT MAX(v.view_count) c, v.title t
                FROM video v, upload u
                WHERE v.videoID = u.videoID AND 
                u.accountID = {acc_ID}"""

        Q2 = f"""SELECT MIN(v.view_count) c, v.title t
                FROM video v, upload u
                WHERE v.videoID = u.videoID AND 
                u.accountID = {acc_ID}"""

        res1 = db_execute(Q1)
        res2 = db_execute(Q2)

        print("\nHighest:")
        for i in res1:
            print(f"{i['t']}\t{i['c']}")

        print("\n\nLowest:")
        for i in res2:
            print(f"{i['t']}\t{i['c']}")

    elif len(res) == 1:
        Q = f"""SELECT v.title t, v.view_count c
                FROM video v, upload u
                WHERE v.videoID = u.videoID
                AND u.accountID = {acc_ID}"""

        res = db_execute(Q)
        print("\nThis account has uploaded only one video")
        print(f"Highest view count: {res[0]['t']}\t{res[0]['c']}")
    else:
        print('This account hasn\'t uploaded a video')


def fn12():
    keyword = input("Enter keyword for search: ")

    Q = f"""SELECT title t, a.username us
            FROM 
            video v left join upload u 
                on v.videoID = u.videoID 
            left join account a
                on u.accountID = a.accountID
            WHERE v.title LIKE '%{keyword}%'"""

    res = db_execute(Q)
    if len(res):
        print(f"\n{'Title:':<70} {'Uploaded by:':<70}")
        for i in res:
            print(f"{i['t']:<70} {i['us']:<70}")
    else:
        print('No matching videos found')
    return 


def fn13():
    Q = "SELECT accountID a_ID FROM account"

    allaccs = db_execute(Q)
    allaccs = [i['a_ID'] for i in allaccs]

    while True:
        try:
            acc_ID = int(input("Enter your Account ID: "))
            if (acc_ID in allaccs): break
            else:
                print("This account ID does not exist\n")
        except:
            print("Please enter a valid account ID\n")
            continue

# videowise:
    Q = f"""SELECT v.title t, v.revenue r 
            FROM account a JOIN upload u 
                ON a.accountID = u.accountID 
            JOIN video v 
                on u.videoID = v.videoID 
            WHERE a.accountID = {acc_ID}"""

    res = db_execute(Q)

    if len(res): print(f"\n\n{'Title':<40} {'Revenue':<40}")
    for i in res:
        print(f"{i['t']:<40} {i['r']:<40}")

# total revenue:S
    Q = f"""SELECT username n, sum(v.revenue) s
            from account a JOIN upload u 
                on a.accountID = u.accountID 
            JOIN video v 
                on u.videoID = v.videoID 
            WHERE a.accountID = {acc_ID} 
            GROUP BY username"""

    res = db_execute(Q)

    if len(res):
        print(f"\n\n{'Username':<40} {'Sum of Revenue':<40}")
        for i in res:
            print(f"{i['n']:<40} {i['s']:<40}")
    else:
        print('This account hasn\'t uploaded a video')

def fn14():
    Q = "SELECT videoID v_ID FROM video"

    allvids = db_execute(Q)
    allvids = [i['v_ID'] for i in allvids]

    while True:
        try:
            vid_ID = int(input("Enter the video ID: "))
            if (vid_ID in allvids): break
            else:
                print("This video ID does not exist")
        except:
            print("Please enter a valid video ID")
            continue

# title, avg engagement rate:
    Q = f"""SELECT v.videoID vd, v.title t, avg(ew.engagement_rate_ad) r 
            FROM engage_with ew JOIN video v 
                ON v.videoID = ew.videoID 
            WHERE v.videoID = {vid_ID} 
            GROUP BY v.videoID"""

    res = db_execute(Q)

    if len(res): print(f"\n\n{'Video ID':<20} {'title':<40} {'Average Engagement Rate':<40}")
    for i in res:
        print(f"{i['vd']:<20} {i['t']:<40} {i['r']:<40}")

# video-wise ads.
    Q = f"""SELECT a.adID ad, a.advertiser av, ew.engagement_rate_ad ar
            FROM engage_with ew JOIN video v 
                ON v.videoID = ew.videoID 
            JOIN advertisement a 
                ON a.adID = ew.adID 
            WHERE v.videoID = {vid_ID}"""

    res = db_execute(Q)

    if len(res):
        print(f"\n\n{'AD ID':<20} {'Advertiser':<40} {'Engagement Rate':<40}")
        for i in res:
            print(f"{i['ad']:<20} {i['av']:<40} {i['ar']:<40}")
    else:
        print('No ads have been run on this video')